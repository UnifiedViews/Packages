#!/bin/sh
# postinst script for #PACKAGE#
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule

db_creadentials(){
    db_get backend/mysql_root
    ROOT_PW=$RET

    db_get backend/mysql_db_user
    DBA_USER=$RET

    db_get backend/mysql_db_password
    DBA_PASS=$RET

}

set_java() {
 JAVA_VERSION=`java -version 2>&1 | grep "java version" | awk '{print $3}' | tr -d \" | awk '{split($0, array, ".")} END{print array[2]}'`
 echo -n "check java version"
 if [ ! $JAVA_VERSION -eq 7 ]; then
     JAVA_NAME=`update-java-alternatives  -l | grep 7 | cut -d' ' -f1`
     if [ -n $JAVA_NAME ] ; then
         /usr/sbin/update-java-alternatives --jre-headless --set $JAVA_NAME
     echo " - Java version is set to 1.7"
     else
        echo " ERROR: java 7 is not installed"
     fi

 else
    echo  " - ok"
 fi

}


db_up() {
  #Check if mysql is started
  service mysql status > /dev/null || service mysql start >/dev/null 2>&1

  echo -n "INFO: Waiting for mysql to be up..."

  CPT=0
  TIMEOUT=60
  while [ 1 ]
  do
    mysql --password=$ROOT_PW -e ' SELECT "isRunning" '>/dev/null 2>&1
    if [ $? -eq 0 ]; then
        break
    fi

    echo -n "."
    sleep 1
    CPT=$((${CPT}+1))
    if [ ${CPT} -eq ${TIMEOUT} ]
    then
      echo -e "\nERROR: Connection to Mysql has not been established before timeout. Exiting"
      exit 1
    fi
  done

  echo " Done"
}



db_configure() {
    # if database unifiedviews is not exist
    if ! mysql -u $DBA_USER --password=$DBA_PASS -e 'use unifiedviews'; then
        echo "create database if not exists unifiedviews;" | mysql --password=$ROOT_PW
        echo "create user $DBA_USER identified by '$DBA_PASS';" | mysql --password=$ROOT_PW || true
        echo "grant ALL on unifiedviews.* to $DBA_USER;" | mysql --password=$ROOT_PW
        mysql -u $DBA_USER --password=$DBA_PASS unifiedviews < \
        /usr/share/unifiedviews/mysql/schema.sql >> /var/log/unifiedviews/sql-install.log 2>&1
        mysql -u $DBA_USER --password=$DBA_PASS unifiedviews < \
        /usr/share/unifiedviews/mysql/data.sql >> /var/log/unifiedviews/sql-install.log 2>&1
        mysql -u $DBA_USER --password=$DBA_PASS unifiedviews < \
        /usr/share/unifiedviews/mysql/core-plugin.sql >> /var/log/unifiedviews/sql-install.log 2>&1
    fi    
    
    version=`mysql -u $DBA_USER --password=$DBA_PASS -s -N -e "select value from properties WHERE properties.key='UV.Core.version' " unifiedviews`
    if [ "$version" = "001.004.000" ]
    then
       # set db schema version
       mysql -u $DBA_USER --password=$DBA_PASS unifiedviews < \
       /usr/share/unifiedviews/mysql/1.5.5-update.sql >> /var/log/unifiedviews/sql-install.log 2>&1
    fi
    
    
    # update backend config
    sed --in-place \
    -e "s/database.sql.hostname = .*/database.sql.hostname = $address_host/" \
    -e "s/database.sql.port = .*/database.sql.port = 3306/" \
    -e "s/database.sql.user = .*/database.sql.user = $DBA_USER/" \
    -e "s/database.sql.password = .*/database.sql.password = $DBA_PASS/" \
    /etc/unifiedviews/backend-config.properties
}




case "$1" in
  configure)
    db_creadentials
    db_up
    set_java
    db_configure
    db_stop
    
  ;;

  abort-upgrade|abort-remove|abort-deconfigure)
  ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
    
  ;;
esac


# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
